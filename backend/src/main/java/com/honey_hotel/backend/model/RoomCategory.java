package com.honey_hotel.backend.model;

import java.util.List;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

/**
 Main Room Category class with functionalities
 @author Samuel Choi
 @version 1.0 (Oct 11 2024)
 */
@Entity
@Table(name = "roomcategories")
public class RoomCategory {

    /**
     * Unique identifier of the activity automatically generated by the database
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The name of the room category (e.g., Deluxe, Standard)
     */
    private String categoryName;

    /**
     * The list of rooms that belong to this room category
     */
    @OneToMany(mappedBy = "category")
    @JsonManagedReference
    private List<Room> rooms;

    /**
     * The hotel to which this room category belongs
     */
    @ManyToOne
    @JoinColumn(name = "hotel_id", nullable = false)
    @JsonBackReference
    private Hotel hotel;

    /////// room category id
    /**
     * Gets the room category ID
     *
     * @return room category ID
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the room category ID
     *
     * @param id room category ID
     */
    public void setId(Long id) {
        this.id = id;
    }
    /////// room category id

    /////// room category name (e.g., Deluxe, Standard)
    /**
     * Gets the room category name (e.g., Deluxe, Standard)
     *
     * @return room category name
     */
    public String getCategoryName() {
        return categoryName;
    }

    /**
     * Sets the room category name (e.g., Deluxe, Standard)
     *
     * @param categoryName room category name
     */
    public void setCategoryName(String categoryName) {
        this.categoryName = categoryName;
    }
    /////// room category name (e.g., Deluxe, Standard)

    /////// list of rooms in this category
    /**
     * Gets list of rooms in this category
     *
     * @return list of rooms
     */
    public List<Room> getRooms() {
        return rooms;
    }

    /**
     * Sets list of rooms in this category
     *
     * @param rooms list of rooms
     */
    public void setRooms(List<Room> rooms) {
        this.rooms = rooms;
    }
    /////// list of rooms in this category

    /////// hotel associated with the room category
    /**
     * Gets hotel associated with the room category
     *
     * @return hotel
     */
    public Hotel getHotel() {
        return hotel;
    }

    /**
     * Sets hotel associated with the room category
     *
     * @param hotel hotel
     */
    public void setHotel(Hotel hotel) {
        this.hotel = hotel;
    }
    /////// hotel associated with the room category
}
